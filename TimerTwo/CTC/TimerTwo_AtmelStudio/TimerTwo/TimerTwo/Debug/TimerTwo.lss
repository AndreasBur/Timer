
TimerTwo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000043c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800100  00800100  000004b0  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  000004b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000510  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00000550  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000105c  00000000  00000000  00000670  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000068c  00000000  00000000  000016cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008fd  00000000  00000000  00001d58  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000027c  00000000  00000000  00002658  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007c5  00000000  00000000  000028d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00003099  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00003867  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 53 01 	jmp	0x2a6	; 0x2a6 <__vector_7>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 91 01 	jmp	0x322	; 0x322 <__vector_16>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__ctors_start>:
  68:	7a 01       	movw	r14, r20

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	ec e3       	ldi	r30, 0x3C	; 60
  7e:	f4 e0       	ldi	r31, 0x04	; 4
  80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
  82:	05 90       	lpm	r0, Z+
  84:	0d 92       	st	X+, r0
  86:	a0 30       	cpi	r26, 0x00	; 0
  88:	b1 07       	cpc	r27, r17
  8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
  8c:	21 e0       	ldi	r18, 0x01	; 1
  8e:	a0 e0       	ldi	r26, 0x00	; 0
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
  94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
  96:	ad 30       	cpi	r26, 0x0D	; 13
  98:	b2 07       	cpc	r27, r18
  9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	c5 e3       	ldi	r28, 0x35	; 53
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
  a4:	21 97       	sbiw	r28, 0x01	; 1
  a6:	fe 01       	movw	r30, r28
  a8:	0e 94 16 02 	call	0x42c	; 0x42c <__tablejump2__>
  ac:	c4 33       	cpi	r28, 0x34	; 52
  ae:	d1 07       	cpc	r29, r17
  b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
  b2:	0e 94 82 01 	call	0x304	; 0x304 <main>
  b6:	0c 94 1c 02 	jmp	0x438	; 0x438 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <setup>:



void setup() {
  // put your setup code here, to run once:
  Timer2.init(1000);
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	48 ee       	ldi	r20, 0xE8	; 232
  c4:	53 e0       	ldi	r21, 0x03	; 3
  c6:	60 e0       	ldi	r22, 0x00	; 0
  c8:	70 e0       	ldi	r23, 0x00	; 0
  ca:	80 e0       	ldi	r24, 0x00	; 0
  cc:	91 e0       	ldi	r25, 0x01	; 1
  ce:	0e 94 17 01 	call	0x22e	; 0x22e <_ZN8TimerTwo4initElPFvvE>
  Timer2.start();
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	91 e0       	ldi	r25, 0x01	; 1
  d6:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <_ZN8TimerTwo5startEv>

000000da <loop>:
}

void loop() {
  da:	08 95       	ret

000000dc <_ZN8TimerTwo9setPeriodEl>:
		*Microseconds = ((CounterValue * 1000L) / (F_CPU / 1000L)) << PrescaleShiftScale;
	} else {
		ReturnValue = E_NOT_OK;
	}
	return ReturnValue;
} /* read */
  dc:	fc 01       	movw	r30, r24
  de:	84 e0       	ldi	r24, 0x04	; 4
  e0:	44 0f       	add	r20, r20
  e2:	55 1f       	adc	r21, r21
  e4:	66 1f       	adc	r22, r22
  e6:	77 1f       	adc	r23, r23
  e8:	8a 95       	dec	r24
  ea:	d1 f7       	brne	.-12     	; 0xe0 <_ZN8TimerTwo9setPeriodEl+0x4>
  ec:	4f 3f       	cpi	r20, 0xFF	; 255
  ee:	51 05       	cpc	r21, r1
  f0:	61 05       	cpc	r22, r1
  f2:	71 05       	cpc	r23, r1
  f4:	09 f0       	breq	.+2      	; 0xf8 <_ZN8TimerTwo9setPeriodEl+0x1c>
  f6:	10 f4       	brcc	.+4      	; 0xfc <_ZN8TimerTwo9setPeriodEl+0x20>
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	0e c0       	rjmp	.+28     	; 0x118 <_ZN8TimerTwo9setPeriodEl+0x3c>
  fc:	b3 e0       	ldi	r27, 0x03	; 3
  fe:	76 95       	lsr	r23
 100:	67 95       	ror	r22
 102:	57 95       	ror	r21
 104:	47 95       	ror	r20
 106:	ba 95       	dec	r27
 108:	d1 f7       	brne	.-12     	; 0xfe <_ZN8TimerTwo9setPeriodEl+0x22>
 10a:	4f 3f       	cpi	r20, 0xFF	; 255
 10c:	51 05       	cpc	r21, r1
 10e:	61 05       	cpc	r22, r1
 110:	71 05       	cpc	r23, r1
 112:	09 f0       	breq	.+2      	; 0x116 <_ZN8TimerTwo9setPeriodEl+0x3a>
 114:	20 f4       	brcc	.+8      	; 0x11e <_ZN8TimerTwo9setPeriodEl+0x42>
 116:	82 e0       	ldi	r24, 0x02	; 2
 118:	81 83       	std	Z+1, r24	; 0x01
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	48 c0       	rjmp	.+144    	; 0x1ae <_ZN8TimerTwo9setPeriodEl+0xd2>
 11e:	a2 e0       	ldi	r26, 0x02	; 2
 120:	76 95       	lsr	r23
 122:	67 95       	ror	r22
 124:	57 95       	ror	r21
 126:	47 95       	ror	r20
 128:	aa 95       	dec	r26
 12a:	d1 f7       	brne	.-12     	; 0x120 <_ZN8TimerTwo9setPeriodEl+0x44>
 12c:	4f 3f       	cpi	r20, 0xFF	; 255
 12e:	51 05       	cpc	r21, r1
 130:	61 05       	cpc	r22, r1
 132:	71 05       	cpc	r23, r1
 134:	09 f0       	breq	.+2      	; 0x138 <_ZN8TimerTwo9setPeriodEl+0x5c>
 136:	10 f4       	brcc	.+4      	; 0x13c <_ZN8TimerTwo9setPeriodEl+0x60>
 138:	83 e0       	ldi	r24, 0x03	; 3
 13a:	ee cf       	rjmp	.-36     	; 0x118 <_ZN8TimerTwo9setPeriodEl+0x3c>
 13c:	76 95       	lsr	r23
 13e:	67 95       	ror	r22
 140:	57 95       	ror	r21
 142:	47 95       	ror	r20
 144:	4f 3f       	cpi	r20, 0xFF	; 255
 146:	51 05       	cpc	r21, r1
 148:	61 05       	cpc	r22, r1
 14a:	71 05       	cpc	r23, r1
 14c:	09 f0       	breq	.+2      	; 0x150 <_ZN8TimerTwo9setPeriodEl+0x74>
 14e:	10 f4       	brcc	.+4      	; 0x154 <_ZN8TimerTwo9setPeriodEl+0x78>
 150:	84 e0       	ldi	r24, 0x04	; 4
 152:	e2 cf       	rjmp	.-60     	; 0x118 <_ZN8TimerTwo9setPeriodEl+0x3c>
 154:	76 95       	lsr	r23
 156:	67 95       	ror	r22
 158:	57 95       	ror	r21
 15a:	47 95       	ror	r20
 15c:	4f 3f       	cpi	r20, 0xFF	; 255
 15e:	51 05       	cpc	r21, r1
 160:	61 05       	cpc	r22, r1
 162:	71 05       	cpc	r23, r1
 164:	09 f0       	breq	.+2      	; 0x168 <_ZN8TimerTwo9setPeriodEl+0x8c>
 166:	10 f4       	brcc	.+4      	; 0x16c <_ZN8TimerTwo9setPeriodEl+0x90>
 168:	85 e0       	ldi	r24, 0x05	; 5
 16a:	d6 cf       	rjmp	.-84     	; 0x118 <_ZN8TimerTwo9setPeriodEl+0x3c>
 16c:	76 95       	lsr	r23
 16e:	67 95       	ror	r22
 170:	57 95       	ror	r21
 172:	47 95       	ror	r20
 174:	4f 3f       	cpi	r20, 0xFF	; 255
 176:	51 05       	cpc	r21, r1
 178:	61 05       	cpc	r22, r1
 17a:	71 05       	cpc	r23, r1
 17c:	09 f0       	breq	.+2      	; 0x180 <_ZN8TimerTwo9setPeriodEl+0xa4>
 17e:	10 f4       	brcc	.+4      	; 0x184 <_ZN8TimerTwo9setPeriodEl+0xa8>
 180:	86 e0       	ldi	r24, 0x06	; 6
 182:	ca cf       	rjmp	.-108    	; 0x118 <_ZN8TimerTwo9setPeriodEl+0x3c>
 184:	82 e0       	ldi	r24, 0x02	; 2
 186:	76 95       	lsr	r23
 188:	67 95       	ror	r22
 18a:	57 95       	ror	r21
 18c:	47 95       	ror	r20
 18e:	8a 95       	dec	r24
 190:	d1 f7       	brne	.-12     	; 0x186 <_ZN8TimerTwo9setPeriodEl+0xaa>
 192:	87 e0       	ldi	r24, 0x07	; 7
 194:	81 83       	std	Z+1, r24	; 0x01
 196:	4f 3f       	cpi	r20, 0xFF	; 255
 198:	51 05       	cpc	r21, r1
 19a:	61 05       	cpc	r22, r1
 19c:	71 05       	cpc	r23, r1
 19e:	09 f0       	breq	.+2      	; 0x1a2 <_ZN8TimerTwo9setPeriodEl+0xc6>
 1a0:	08 f4       	brcc	.+2      	; 0x1a4 <_ZN8TimerTwo9setPeriodEl+0xc8>
 1a2:	bb cf       	rjmp	.-138    	; 0x11a <_ZN8TimerTwo9setPeriodEl+0x3e>
 1a4:	4f ef       	ldi	r20, 0xFF	; 255
 1a6:	50 e0       	ldi	r21, 0x00	; 0
 1a8:	60 e0       	ldi	r22, 0x00	; 0
 1aa:	70 e0       	ldi	r23, 0x00	; 0
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	40 93 b3 00 	sts	0x00B3, r20	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 1b2:	90 81       	ld	r25, Z
 1b4:	93 30       	cpi	r25, 0x03	; 3
 1b6:	41 f4       	brne	.+16     	; 0x1c8 <_ZN8TimerTwo9setPeriodEl+0xec>
 1b8:	90 91 b1 00 	lds	r25, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
 1bc:	21 81       	ldd	r18, Z+1	; 0x01
 1be:	27 70       	andi	r18, 0x07	; 7
 1c0:	98 7f       	andi	r25, 0xF8	; 248
 1c2:	92 2b       	or	r25, r18
 1c4:	90 93 b1 00 	sts	0x00B1, r25	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
 1c8:	08 95       	ret

000001ca <_ZN8TimerTwo5startEv>:
 1ca:	fc 01       	movw	r30, r24
 1cc:	80 81       	ld	r24, Z
 1ce:	82 30       	cpi	r24, 0x02	; 2
 1d0:	11 f0       	breq	.+4      	; 0x1d6 <_ZN8TimerTwo5startEv+0xc>
 1d2:	84 30       	cpi	r24, 0x04	; 4
 1d4:	b9 f4       	brne	.+46     	; 0x204 <_ZN8TimerTwo5startEv+0x3a>
 1d6:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
 1da:	90 91 b1 00 	lds	r25, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
 1de:	81 81       	ldd	r24, Z+1	; 0x01
 1e0:	87 70       	andi	r24, 0x07	; 7
 1e2:	98 7f       	andi	r25, 0xF8	; 248
 1e4:	98 2b       	or	r25, r24
 1e6:	90 93 b1 00 	sts	0x00B1, r25	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
 1ea:	82 81       	ldd	r24, Z+2	; 0x02
 1ec:	93 81       	ldd	r25, Z+3	; 0x03
 1ee:	89 2b       	or	r24, r25
 1f0:	29 f0       	breq	.+10     	; 0x1fc <_ZN8TimerTwo5startEv+0x32>
 1f2:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 1f6:	82 60       	ori	r24, 0x02	; 2
 1f8:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 1fc:	83 e0       	ldi	r24, 0x03	; 3
 1fe:	80 83       	st	Z, r24
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	08 95       	ret
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	08 95       	ret

00000208 <_ZN8TimerTwo15attachInterruptEPFvvE>:
 208:	61 15       	cp	r22, r1
 20a:	71 05       	cpc	r23, r1
 20c:	61 f0       	breq	.+24     	; 0x226 <_ZN8TimerTwo15attachInterruptEPFvvE+0x1e>
 20e:	fc 01       	movw	r30, r24
 210:	73 83       	std	Z+3, r23	; 0x03
 212:	62 83       	std	Z+2, r22	; 0x02
 214:	80 81       	ld	r24, Z
 216:	83 30       	cpi	r24, 0x03	; 3
 218:	41 f4       	brne	.+16     	; 0x22a <_ZN8TimerTwo15attachInterruptEPFvvE+0x22>
 21a:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 21e:	82 60       	ori	r24, 0x02	; 2
 220:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 224:	02 c0       	rjmp	.+4      	; 0x22a <_ZN8TimerTwo15attachInterruptEPFvvE+0x22>
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	08 95       	ret
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	08 95       	ret

0000022e <_ZN8TimerTwo4initElPFvvE>:
 22e:	ef 92       	push	r14
 230:	ff 92       	push	r15
 232:	1f 93       	push	r17
 234:	cf 93       	push	r28
 236:	df 93       	push	r29
 238:	dc 01       	movw	r26, r24
 23a:	ec 91       	ld	r30, X
 23c:	e1 11       	cpse	r30, r1
 23e:	2b c0       	rjmp	.+86     	; 0x296 <_ZN8TimerTwo4initElPFvvE+0x68>
 240:	79 01       	movw	r14, r18
 242:	ec 01       	movw	r28, r24
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	88 83       	st	Y, r24
 248:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 24c:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
 250:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 254:	8e 7f       	andi	r24, 0xFE	; 254
 256:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 25a:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 25e:	82 60       	ori	r24, 0x02	; 2
 260:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 264:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
 268:	87 7f       	andi	r24, 0xF7	; 247
 26a:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
 26e:	cd 01       	movw	r24, r26
 270:	0e 94 6e 00 	call	0xdc	; 0xdc <_ZN8TimerTwo9setPeriodEl>
 274:	11 e0       	ldi	r17, 0x01	; 1
 276:	81 30       	cpi	r24, 0x01	; 1
 278:	09 f0       	breq	.+2      	; 0x27c <_ZN8TimerTwo4initElPFvvE+0x4e>
 27a:	10 e0       	ldi	r17, 0x00	; 0
 27c:	e1 14       	cp	r14, r1
 27e:	f1 04       	cpc	r15, r1
 280:	39 f0       	breq	.+14     	; 0x290 <_ZN8TimerTwo4initElPFvvE+0x62>
 282:	b7 01       	movw	r22, r14
 284:	ce 01       	movw	r24, r28
 286:	0e 94 04 01 	call	0x208	; 0x208 <_ZN8TimerTwo15attachInterruptEPFvvE>
 28a:	81 30       	cpi	r24, 0x01	; 1
 28c:	09 f4       	brne	.+2      	; 0x290 <_ZN8TimerTwo4initElPFvvE+0x62>
 28e:	11 e0       	ldi	r17, 0x01	; 1
 290:	82 e0       	ldi	r24, 0x02	; 2
 292:	88 83       	st	Y, r24
 294:	01 c0       	rjmp	.+2      	; 0x298 <_ZN8TimerTwo4initElPFvvE+0x6a>
 296:	11 e0       	ldi	r17, 0x01	; 1
 298:	81 2f       	mov	r24, r17
 29a:	df 91       	pop	r29
 29c:	cf 91       	pop	r28
 29e:	1f 91       	pop	r17
 2a0:	ff 90       	pop	r15
 2a2:	ef 90       	pop	r14
 2a4:	08 95       	ret

000002a6 <__vector_7>:

/******************************************************************************************************************************************************
  I S R   F U N C T I O N S
******************************************************************************************************************************************************/
ISR(TIMER2_COMPA_vect)
{
 2a6:	1f 92       	push	r1
 2a8:	0f 92       	push	r0
 2aa:	0f b6       	in	r0, 0x3f	; 63
 2ac:	0f 92       	push	r0
 2ae:	11 24       	eor	r1, r1
 2b0:	2f 93       	push	r18
 2b2:	3f 93       	push	r19
 2b4:	4f 93       	push	r20
 2b6:	5f 93       	push	r21
 2b8:	6f 93       	push	r22
 2ba:	7f 93       	push	r23
 2bc:	8f 93       	push	r24
 2be:	9f 93       	push	r25
 2c0:	af 93       	push	r26
 2c2:	bf 93       	push	r27
 2c4:	ef 93       	push	r30
 2c6:	ff 93       	push	r31
	Timer2.TimerOverflowCallback();
 2c8:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <__data_end+0x2>
 2cc:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <__data_end+0x3>
 2d0:	09 95       	icall
}
 2d2:	ff 91       	pop	r31
 2d4:	ef 91       	pop	r30
 2d6:	bf 91       	pop	r27
 2d8:	af 91       	pop	r26
 2da:	9f 91       	pop	r25
 2dc:	8f 91       	pop	r24
 2de:	7f 91       	pop	r23
 2e0:	6f 91       	pop	r22
 2e2:	5f 91       	pop	r21
 2e4:	4f 91       	pop	r20
 2e6:	3f 91       	pop	r19
 2e8:	2f 91       	pop	r18
 2ea:	0f 90       	pop	r0
 2ec:	0f be       	out	0x3f, r0	; 63
 2ee:	0f 90       	pop	r0
 2f0:	1f 90       	pop	r1
 2f2:	18 95       	reti

000002f4 <_GLOBAL__sub_I_Timer2>:
 *    
 *  \return         -
 *****************************************************************************************************************************************************/
TimerTwo::TimerTwo()
{
	State = TIMERTWO_STATE_NONE;
 2f4:	e0 e0       	ldi	r30, 0x00	; 0
 2f6:	f1 e0       	ldi	r31, 0x01	; 1
 2f8:	10 82       	st	Z, r1
	TimerOverflowCallback = NULL;
 2fa:	13 82       	std	Z+3, r1	; 0x03
 2fc:	12 82       	std	Z+2, r1	; 0x02
	ClockSelectBitGroup = TIMERTWO_REG_CS_NO_CLOCK;
 2fe:	11 82       	std	Z+1, r1	; 0x01
 300:	08 95       	ret

00000302 <initVariant>:
 302:	08 95       	ret

00000304 <main>:
 304:	0e 94 db 01 	call	0x3b6	; 0x3b6 <init>
 308:	0e 94 81 01 	call	0x302	; 0x302 <initVariant>
 30c:	0e 94 5f 00 	call	0xbe	; 0xbe <setup>
 310:	c0 e0       	ldi	r28, 0x00	; 0
 312:	d0 e0       	ldi	r29, 0x00	; 0
 314:	0e 94 6d 00 	call	0xda	; 0xda <loop>
 318:	20 97       	sbiw	r28, 0x00	; 0
 31a:	e1 f3       	breq	.-8      	; 0x314 <main+0x10>
 31c:	0e 94 00 00 	call	0	; 0x0 <__vectors>
 320:	f9 cf       	rjmp	.-14     	; 0x314 <main+0x10>

00000322 <__vector_16>:
 322:	1f 92       	push	r1
 324:	0f 92       	push	r0
 326:	0f b6       	in	r0, 0x3f	; 63
 328:	0f 92       	push	r0
 32a:	11 24       	eor	r1, r1
 32c:	2f 93       	push	r18
 32e:	3f 93       	push	r19
 330:	8f 93       	push	r24
 332:	9f 93       	push	r25
 334:	af 93       	push	r26
 336:	bf 93       	push	r27
 338:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <timer0_millis>
 33c:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <timer0_millis+0x1>
 340:	a0 91 07 01 	lds	r26, 0x0107	; 0x800107 <timer0_millis+0x2>
 344:	b0 91 08 01 	lds	r27, 0x0108	; 0x800108 <timer0_millis+0x3>
 348:	30 91 04 01 	lds	r19, 0x0104	; 0x800104 <timer0_fract>
 34c:	23 e0       	ldi	r18, 0x03	; 3
 34e:	23 0f       	add	r18, r19
 350:	2d 37       	cpi	r18, 0x7D	; 125
 352:	20 f4       	brcc	.+8      	; 0x35c <__vector_16+0x3a>
 354:	01 96       	adiw	r24, 0x01	; 1
 356:	a1 1d       	adc	r26, r1
 358:	b1 1d       	adc	r27, r1
 35a:	05 c0       	rjmp	.+10     	; 0x366 <__vector_16+0x44>
 35c:	26 e8       	ldi	r18, 0x86	; 134
 35e:	23 0f       	add	r18, r19
 360:	02 96       	adiw	r24, 0x02	; 2
 362:	a1 1d       	adc	r26, r1
 364:	b1 1d       	adc	r27, r1
 366:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <timer0_fract>
 36a:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <timer0_millis>
 36e:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <timer0_millis+0x1>
 372:	a0 93 07 01 	sts	0x0107, r26	; 0x800107 <timer0_millis+0x2>
 376:	b0 93 08 01 	sts	0x0108, r27	; 0x800108 <timer0_millis+0x3>
 37a:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <timer0_overflow_count>
 37e:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <timer0_overflow_count+0x1>
 382:	a0 91 0b 01 	lds	r26, 0x010B	; 0x80010b <timer0_overflow_count+0x2>
 386:	b0 91 0c 01 	lds	r27, 0x010C	; 0x80010c <timer0_overflow_count+0x3>
 38a:	01 96       	adiw	r24, 0x01	; 1
 38c:	a1 1d       	adc	r26, r1
 38e:	b1 1d       	adc	r27, r1
 390:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <timer0_overflow_count>
 394:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <timer0_overflow_count+0x1>
 398:	a0 93 0b 01 	sts	0x010B, r26	; 0x80010b <timer0_overflow_count+0x2>
 39c:	b0 93 0c 01 	sts	0x010C, r27	; 0x80010c <timer0_overflow_count+0x3>
 3a0:	bf 91       	pop	r27
 3a2:	af 91       	pop	r26
 3a4:	9f 91       	pop	r25
 3a6:	8f 91       	pop	r24
 3a8:	3f 91       	pop	r19
 3aa:	2f 91       	pop	r18
 3ac:	0f 90       	pop	r0
 3ae:	0f be       	out	0x3f, r0	; 63
 3b0:	0f 90       	pop	r0
 3b2:	1f 90       	pop	r1
 3b4:	18 95       	reti

000003b6 <init>:
 3b6:	78 94       	sei
 3b8:	84 b5       	in	r24, 0x24	; 36
 3ba:	82 60       	ori	r24, 0x02	; 2
 3bc:	84 bd       	out	0x24, r24	; 36
 3be:	84 b5       	in	r24, 0x24	; 36
 3c0:	81 60       	ori	r24, 0x01	; 1
 3c2:	84 bd       	out	0x24, r24	; 36
 3c4:	85 b5       	in	r24, 0x25	; 37
 3c6:	82 60       	ori	r24, 0x02	; 2
 3c8:	85 bd       	out	0x25, r24	; 37
 3ca:	85 b5       	in	r24, 0x25	; 37
 3cc:	81 60       	ori	r24, 0x01	; 1
 3ce:	85 bd       	out	0x25, r24	; 37
 3d0:	ee e6       	ldi	r30, 0x6E	; 110
 3d2:	f0 e0       	ldi	r31, 0x00	; 0
 3d4:	80 81       	ld	r24, Z
 3d6:	81 60       	ori	r24, 0x01	; 1
 3d8:	80 83       	st	Z, r24
 3da:	e1 e8       	ldi	r30, 0x81	; 129
 3dc:	f0 e0       	ldi	r31, 0x00	; 0
 3de:	10 82       	st	Z, r1
 3e0:	80 81       	ld	r24, Z
 3e2:	82 60       	ori	r24, 0x02	; 2
 3e4:	80 83       	st	Z, r24
 3e6:	80 81       	ld	r24, Z
 3e8:	81 60       	ori	r24, 0x01	; 1
 3ea:	80 83       	st	Z, r24
 3ec:	e0 e8       	ldi	r30, 0x80	; 128
 3ee:	f0 e0       	ldi	r31, 0x00	; 0
 3f0:	80 81       	ld	r24, Z
 3f2:	81 60       	ori	r24, 0x01	; 1
 3f4:	80 83       	st	Z, r24
 3f6:	e1 eb       	ldi	r30, 0xB1	; 177
 3f8:	f0 e0       	ldi	r31, 0x00	; 0
 3fa:	80 81       	ld	r24, Z
 3fc:	84 60       	ori	r24, 0x04	; 4
 3fe:	80 83       	st	Z, r24
 400:	e0 eb       	ldi	r30, 0xB0	; 176
 402:	f0 e0       	ldi	r31, 0x00	; 0
 404:	80 81       	ld	r24, Z
 406:	81 60       	ori	r24, 0x01	; 1
 408:	80 83       	st	Z, r24
 40a:	ea e7       	ldi	r30, 0x7A	; 122
 40c:	f0 e0       	ldi	r31, 0x00	; 0
 40e:	80 81       	ld	r24, Z
 410:	84 60       	ori	r24, 0x04	; 4
 412:	80 83       	st	Z, r24
 414:	80 81       	ld	r24, Z
 416:	82 60       	ori	r24, 0x02	; 2
 418:	80 83       	st	Z, r24
 41a:	80 81       	ld	r24, Z
 41c:	81 60       	ori	r24, 0x01	; 1
 41e:	80 83       	st	Z, r24
 420:	80 81       	ld	r24, Z
 422:	80 68       	ori	r24, 0x80	; 128
 424:	80 83       	st	Z, r24
 426:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 42a:	08 95       	ret

0000042c <__tablejump2__>:
 42c:	ee 0f       	add	r30, r30
 42e:	ff 1f       	adc	r31, r31
 430:	05 90       	lpm	r0, Z+
 432:	f4 91       	lpm	r31, Z
 434:	e0 2d       	mov	r30, r0
 436:	09 94       	ijmp

00000438 <_exit>:
 438:	f8 94       	cli

0000043a <__stop_program>:
 43a:	ff cf       	rjmp	.-2      	; 0x43a <__stop_program>
